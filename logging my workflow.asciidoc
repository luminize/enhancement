Refactoring documentation
=========================

[NOTE]
====
This is the log of me, trying to fit change the way of documenting for the
Machinekit project. With this I'm testing the workflow for enhancing the documentation.
====

I made 3 git repositories on github/luminize

. `upstream`
. `enhancement`
. `subtree`


Locally I made 3 directories files in a git repo and added /docs/src directory to `upstream`

[NOTE]
====
`upstream` means "LunixCNC"

`enhancement` means "Machinekit"

`subtree` means "/docs"
====

further the situation I made is:

. `upstream` has the remote `upstream`
. `enhancement` has the remotes `upstream-source` and `enhancement`
. `enhancement` has the branches
** `upstream-branch` and is tracking `upstream-source/master`
** `master` and is tracking `enhancement/master`
** `subtree-branch` (in which this log is held). and is tracking `enhancement/subtree-branch`

switch to a branch with `git branch checkout <branch name>.` and then
type `git branch -u <remote name>/<branch name>`

if you want to see which branch is tracking what type `git branch -vv` it then will
give output like something like this in the `enhancement` repo:

```
  master          c216105 [enhancement/master] add /docs and /docs/src with textfilesÂ§
* subtree-branch  9c1645c [enhancement/subtree-branch] log: add more info about remote branches and tracking
  upstream-branch 8216473 [upstream-source/master: ahead 2] log: add more steps and info
```

== update done in `upstream`
when some change is done in `upstream` then the following must happen:

. `upstream/master` (a.k.a. upstream-source/master) pulled into `enhancement/upstream-branch`
. `enhancement/master` is the branch to which updates and new stuff that is usable
are are being applied from `enhancement/upstream-branch`
. then

== testing the workflow

. change a file in local `upstream`
. push to `upstream`
. in local `enhancement/upstream-branch` pull `upstream-source/master`
. in local `enhancement/master` rebase onto `enhancement/upstream-branch`
. then add a little correction into the new file
. commit
. in local `enhancement/subtree-branch` rebase unto `enhancement/master`
. push both `subtree-branch` and `master` to github.

== testing renaming to `.asciidot`
here I'll test how the renaming of .txt in `enhancement/subtree-branch` will work
with changes from upstream. So the same as the next test, but at the same time a
file is changed in `upstream` i'll rename a docyment in `/docs/src` from the
`enhancement/subtree-branch`.


== easy adding to the documentation
If I am correct then the "/docs" should go als in subtree.wiki.git as that will
be easily modified by other people. I will test this later.

Then modifications from Github can be pulled into subtree

test for inter document linking
link:asciidoc%20markup.asciidoc[asciidoc markup]
link:terminal%20output%20of%20split%20operation.asciidoc[split operation]
